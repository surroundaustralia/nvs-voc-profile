@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sdo: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@base <https://linked.data.gov.au/def/ga-skos/shapes/> .


#
#   Vocabulary
#
<Requirement-2.1.2a>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:message "Each Vocabulary (skos:Collection) *MAY* indicate non-URI identifiers using the `dcterms:identifier` property with a string value or a datatype value specialising xsd:string" ;
    sh:property [
        sh:path dcterms:identifier ;
        sh:datatype xsd:string ;  # TODO: add test for xsd:string-derived properties, e.g. xsd:token
    ]
.

<Requirement-2.1.2b>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
    sh:message "Each Vocabulary (skos:ConceptScheme) *MAY* indicate non-URI identifiers using the `dcterms:identifier` property with a string value or a datatype value specialising xsd:string" ;
    sh:property [
        sh:path dcterms:identifier ;
        sh:datatype xsd:string ;  # TODO: add test for xsd:string-derived properties, e.g. xsd:token
    ]
.

# TODO: add test for English
<Requirement-2.1.3a>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:message "Each Vocabulary (skos:Collection) *MUST* have one and only one `skos:prefLabel` property per language" ;
    sh:property [
        sh:path skos:prefLabel ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ]
.

# TODO: add test for English
<Requirement-2.1.3b>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
    sh:message "Each Vocabulary (skos:ConceptScheme) *MUST* have one and only one `skos:prefLabel` property per language" ;
    sh:property [
        sh:path skos:prefLabel ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
    ]
.

# TODO: add test for English
<Requirement-2.1.4a>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:message "Each Vocabulary (skos:Collection) *MAY* have any number of `skos:altLabel` properties indicating string values and, if it does, the each must indicate its language" ;
    sh:property [
        sh:path skos:altLabel ;
        sh:datatype xsd:string ;
    ]
.

# TODO: add test for English
<Requirement-2.1.4b>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
    sh:message "Each Vocabulary (skos:ConceptScheme) *MAY* have any number of `skos:altLabel` properties indicating string values and, if it does, the each must indicate its language" ;
    sh:property [
        sh:path skos:altLabel ;
        sh:datatype xsd:string ;
    ]
.

# TODO: add test for English
<Requirement-2.1.4b>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:message "Requirement 2.1.4 Each Vocabulary (skos:Collection) *MUST* have one and only one definition, a literal text in English, indicated using the skos:definition property" ;
    sh:property [
        sh:path skos:definition ;
        sh:nodeKind sh:Literal ;
    ]
.

# TODO: add test for English
<Requirement-2.1.4b>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
    sh:message "Requirement 2.1.4 Each Vocabulary (skos:ConceptScheme) *MUST* have one and only one definition, a literal text in English, indicated using the skos:definition property" ;
    sh:property [
        sh:path skos:definition ;
        sh:nodeKind sh:Literal ;
    ]
.

<Requirement-2.1.6-7a>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:property [
        sh:path dcterms:created ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [
                sh:datatype xsd:dateTime ;
            ]
            [
                sh:datatype xsd:date ;
            ]
            [
                sh:datatype xsd:dateTimeStamp ;
            ]
        ) ;
        sh:message "Each Vocabulary (skos:Collection) *MUST* have one and only one `dcterms:modified` property indicating an `xsd:date` or `xsd:dateTime` value" ;
    ] ;
    sh:property [
        sh:path dcterms:modified ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [
                sh:datatype xsd:dateTime ;
            ]
            [
                sh:datatype xsd:date ;
            ]
            [
                sh:datatype xsd:dateTimeStamp ;
            ]
        ) ;
        sh:message "Each Vocabulary (skos:Collection) *MAY* have at most one `dcterms:created` property indicating an `xsd:date` or `xsd:dateTime` value" ;
    ] ;
.

<Requirement-2.1.6-7b>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
    sh:property [
        sh:path dcterms:created ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [
                sh:datatype xsd:dateTime ;
            ]
            [
                sh:datatype xsd:date ;
            ]
            [
                sh:datatype xsd:dateTimeStamp ;
            ]
        ) ;
        sh:message "Each Vocabulary (skos:ConceptScheme) *MUST* have one and only one `dcterms:modified` property indicating an `xsd:date` or `xsd:dateTime` value" ;
    ] ;
    sh:property [
        sh:path dcterms:modified ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [
                sh:datatype xsd:dateTime ;
            ]
            [
                sh:datatype xsd:date ;
            ]
            [
                sh:datatype xsd:dateTimeStamp ;
            ]
        ) ;
        sh:message "Each Vocabulary (skos:Collection) *MAY* have at most one `dcterms:created` property indicating an `xsd:date` or `xsd:dateTime` value" ;
    ] ;
.


# up to here




<Requirement-2.1.6a>
	a sh:NodeShape ;
	sh:property [
		sh:path dcterms:creator ;
        sh:minCount 1 ;
		sh:description "Requirement 2.1.6 Each creator agent associated with a vocabulary MUST be typed as an sdo:Person, sdo:Organization or sdo:GovernmentOrganization" ;
        sh:or (
            [ sh:class sdo:GovernmentOrganization ]
            [ sh:class sdo:Organization ]
            [ sh:class sdo:Person ]
        ) ;
	] ;
.

<Requirement-2.1.6b>
	a sh:NodeShape ;
	sh:property [
		sh:path dcterms:publisher ;
        sh:minCount 1 ;
		sh:description "Requirement 2.1.6 Each publisher agent associated with a vocabulary MUST be typed as an sdo:Person, sdo:Organization or sdo:GovernmentOrganization" ;
        sh:or (
            [ sh:class sdo:GovernmentOrganization ]
            [ sh:class sdo:Organization ]
            [ sh:class sdo:Person ]
        ) ;
	] ;
.

<Requirement-2.1.7>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
    sh:xone (
        [
            sh:path prov:wasDerivedFrom ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
        ]
        [
            sh:path dcterms:source ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
        ]
        [
            sh:path dcterms:provenance ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
        ]
    ) ;
    sh:message "2.1.7 Each vocabulary MUST indicate its source, or that it has no source, by use of either the prov:wasDerivedFrom, dcterms:source, dcterms:provenance properties" ;
.

#Requirement-2.1.8 so far un-implemented in SHACL

<Requirement-2.1.9>
	a sh:NodeShape ;
	sh:targetClass skos:ConceptScheme ;
    sh:property [
        sh:path skos:hasTopConcept ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
    ] ;
    sh:message "2.1.10 Each vocabulary's skos:ConceptScheme MUST link to at least one skos:Concept within the vocabulary as with the property skos:hasTopConcept" ;
.

#
#   Collections
#
# TODO: add test for English
<Requirement-2.2.4a>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:message "Requirement 2.2.1 Each skos:Collection instance MUST have one and only one title indicated using the skos:prefLabel property that must be a literal text value, in English" ;
    sh:property [
        sh:path skos:prefLabel ;
        sh:minCount 1 ;
        sh:uniqueLang true ;
        sh:nodeKind sh:Literal ;
    ]
.

# TODO: add test for English
<Requirement-2.2.4b>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:message "Requirement 2.2.1 Each skos:Collection instance MUST have one and only one definition indicated using the skos:definition property that must be a literal text value, in English" ;
    sh:property [
        sh:path skos:definition ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:Literal ;
    ]
.

<Requirement-2.2.2>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:xone (
        [
            sh:path prov:wasDerivedFrom ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
        ]
        [
            sh:path dcterms:source ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
        ]
        [
            sh:path dcterms:provenance ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
        ]
    ) ;
    sh:message "2.2.2 Each skos:Collection in a vocabulary SHOULD indicate its source by use of either the prov:wasDerivedFrom, dcterms:source, dcterms:provenance properties if the collection is derived from a source" ;
    sh:severity sh:Warning ;
.

#
#   Concept
#
# TODO: add test for English
<Requirement-2.3.1a>
	a sh:NodeShape ;
	sh:targetClass skos:Concept ;
    sh:message "Requirement 2.2.1 Each skos:Concept instance MUST have one and only one title indicated using the skos:prefLabel property that must be a literal text value, in English" ;
    sh:property [
        sh:path skos:prefLabel ;
        sh:minCount 1 ;
        sh:uniqueLang true ;
        sh:nodeKind sh:Literal ;
    ]
.

# TODO: add test for English
<Requirement-2.3.1b>
	a sh:NodeShape ;
	sh:targetClass skos:Concept ;
    sh:message "Requirement 2.2.1 Each skos:Concept instance MUST have one and only one definition indicated using the skos:definition property that must be a literal text value, in English" ;
    sh:property [
        sh:path skos:definition ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:Literal ;
    ]
.

<Requirement-2.3.2>
	a sh:NodeShape ;
	sh:targetClass skos:Concept ;
    sh:message "Requirement 2.3.2 Each skos:Concept in a vocabulary MUST indicate the vocabulary that defines it by use of the rdfs:isDefinedBy property indicating a skos:ConceptScheme instance" ;
    sh:property [
        sh:path rdfs:isDefinedBy ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
    ]
.

<Requirement-2.3.3>
	a sh:NodeShape ;
	sh:targetClass skos:Concept ;
    sh:or (
        [
            sh:property [
                sh:path skos:inScheme ;
                sh:minCount 1 ;
                sh:class skos:ConceptScheme ;
            ] ;
        ]
        [
            sh:property [
                sh:path skos:topConceptOf ;
                sh:minCount 1 ;
                sh:class skos:ConceptScheme ;
            ] ;
        ]
    ) ;
    sh:message "Requirement 2.3.3 Each skos:Concept in a vocabulary MUST indicate that it appears within that vocabulary's hierarchy of terms by use of either or both skos:inScheme and skos:topConceptOf properties" ;
.

<Requirement-2.3.4>
	a sh:NodeShape ;
	sh:targetClass skos:Collection ;
    sh:xone (
        [
            sh:path prov:wasDerivedFrom ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
        ]
        [
            sh:path dcterms:source ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:IRI ;
        ]
        [
            sh:path dcterms:provenance ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:nodeKind sh:Literal ;
        ]
    ) ;
    sh:message "2.3.4 Each skos:Concept in a vocabulary MAY indicate its source, if different or more finely specified than its vocabularies source, by use of either the prov:wasDerivedFrom, dcterms:source, dcterms:provenance properties" ;
    sh:severity sh:Info ;
.

#
#   Agent
#
# Requirement 2.4.1 is tested by the shape for Requirement 2.1.6a & 2.1.6b

<Requirement-2.4.1>
	a sh:NodeShape ;
	sh:targetClass sdo:Organization , sdo:Person ;
    sh:property [
        sh:path sdo:name ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Requirement 2.4.2 Each agent MUST indicate at least one name property with the sdo:name property that must be a text literal value"
    ] ;
.

<Requirement-2.4.3a>
	a sh:NodeShape ;
	sh:targetClass sdo:Organization ;
    sh:property [
        sh:path sdo:url ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
    ] ;
    sh:message "Requirement 2.4.3 Each agent MUST indicate either a sdo:url (for organizations) or a sdo:email (for people) property with a URL or email value"
.

<Requirement-2.4.3b>
	a sh:NodeShape ;
	sh:targetClass sdo:Person ;
    sh:property [
        sh:path sdo:email ;
        sh:minCount 1 ;
        sh:nodeKind sh:IRI ;
    ] ;
    sh:message "Requirement 2.4.3 Each agent MUST indicate either a sdo:url (for organizations) or a sdo:email (for people) property with a URL or email value"
.